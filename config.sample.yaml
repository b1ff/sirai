# Sirai Configuration Sample
# This file should be placed at ~/.sirai/config.yaml

# Language Model (LLM) Configuration
llm:
  # Provider-specific configurations
  # These can be referenced by name in taskPlanning.providerConfig
  providers:
    # OpenAI configuration
    openai:
      enabled: true
      provider: openai
      model: gpt-4
      apiKey: your_openai_key_here

    # Anthropic configuration
    anthropic:
      enabled: true
      provider: anthropic
      model: claude-3-7-sonnet-latest
      apiKey: your_anthropic_key_here

    # Google configuration
    google:
      enabled: true
      provider: google
      model: gemini-2.5-pro-exp-03-25
      apiKey: your_google_key_here

    # Ollama configuration
    ollama:
      enabled: true
      provider: ollama
      model: command-r
      baseUrl: http://localhost:11434

# Execution Configuration
execution:
  parallel: false                      # Whether to execute tasks in parallel
  maxParallel: 2                       # Maximum number of parallel tasks

# Output Configuration
output:
  colorEnabled: true                   # Enable colored output
  syntaxHighlighting: true             # Enable syntax highlighting for code

# Prompts Configuration
prompts:
  directory: ~/.sirai/prompts           # Directory to store saved prompts

# Chat Configuration
chat:
  saveHistory: true                    # Whether to save chat history between sessions
  maxHistoryMessages: 20               # Maximum number of messages to keep in history

askModel:
  enabled: true
  provider: llmstudio

# Task Planning Configuration
taskPlanning:
  enabled: true
  preferredProvider: anthropic         # Default provider for task planning

  # Task-specific provider configuration
  # This allows you to use different providers for different types of tasks
  providerConfig:
    # Example: Use different providers for different task types
    planning:
      provider: anthropic
      model: claude-3-7-sonnet-latest

    coding:
      provider: google
      model: gemini-2.5-pro-exp-03-25

    default:
      provider: openai
      model: gpt-4o

# Validation Configuration
# Controls code validation before execution
validation:
  enabled: true                       # Enable/disable validation checks
  
  # Commands to run for validating code
  # These commands will be executed in the order listed
  # If any command fails, the execution will be halted
  commands:
    - name: lint                      # Descriptive name for the command
      command: npm run lint           # The actual command to execute
      workingDir: ./                  # Working directory for the command (optional)
      failOnError: true               # Whether to stop execution if this command fails
    
    - name: test
      command: npm test
      workingDir: ./
      failOnError: false              # Continue execution even if tests fail
    
    - name: type-check
      command: tsc --noEmit
      workingDir: ./
      failOnError: true
      
    - name: security-scan
      command: npm audit
      workingDir: ./
      failOnError: false              # Security warnings won't block execution
